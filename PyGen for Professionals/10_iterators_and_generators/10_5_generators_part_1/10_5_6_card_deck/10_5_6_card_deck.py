'''
TODO:
    Implement a generator function card_deck() that takes one argument:
        - suit â€” one of the four playing card suits: spades, clubs, diamonds,
                 hearts

    The function should return a generator that loops through a deck of
    playing cards without the suit.

    Each card should be a string in the following format:
        <rank> <suit>

    For example, 7 of spades, jack of clubs, queen of diamonds, king of hearts,
    ace of spades.

NOTE:
    The cards generated by the iterator should be ordered by suit value first,
    then by rank.

    The seniority of suits in ascending order is:
        spades, clubs, diamonds, hearts.

    The seniority of cards rank in a suit in ascending order is:
        two, three, four, five,
        six, seven, eight, nine,
        ten, jack, queen, king, ace.

    The suits do not require declination and, regardless of the denomination,
    must retain the following spelling:
        spades, clubs, diamonds, hearts.
'''
from typing import Generator


def card_deck(suit: str) -> Generator[str, None, None]:
    """
    Generate a deck of playing cards excluding the given suit.

    Args:
        suit (str): The suit to exclude. Must be one of 'spades', 'clubs',
        'diamonds', 'hearts'.

    Yields:
        str: The card representation in the format '<rank> <suit>'.
    """
    suits = [
        'spades', 'clubs', 'diamonds', 'hearts'
    ]

    ranks = [
        2, 3, 4, 5, 6, 7, 8, 9, 10,
        'jack', 'queen', 'king', 'ace'
    ]

    while True:
        for cur_suit in suits:
            if cur_suit != suit:
                for cur_rank in ranks:
                    yield f"{cur_rank} {cur_suit}"
